{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "appName": {
      "type": "string",
      "defaultValue": "AAPStackFunction",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "databaseName": {
      "type": "string",
      "defaultValue": "ConversionTrackingDb",
      "metadata": {
        "description": "The name for the SQL database"
      }
    },
    "throughput": {
      "type": "int",
      "defaultValue": 400,
      "minValue": 400,
      "maxValue": 1000000,
      "metadata": {
        "description": "The throughput for the database"
      }
    },
    "container1Name": {
      "type": "string",
      "defaultValue": "FlowEvents",
      "metadata": {
        "description": "The name for the first SQL container"
      }
    },
    "container2Name": {
      "type": "string",
      "defaultValue": "SecondContainer",
      "metadata": {
        "description": "The name for the second SQL container"
      }
    },
    "components_AAPStack_AI_WorkspaceResourceId": {
      "defaultValue": "/subscriptions/f800f678-35f3-4453-9d5f-1ce0831dada0/resourcegroups/AAPStack_RG/providers/Microsoft.OperationalInsights/workspaces/AAPStack_AI",
      "type": "SecureString"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "components_AAPStack_AI_name": {
      "defaultValue": "AAPStack-ai",
      "type": "String"
    },
    "configurationStores_AAPStackConfig_ac_name": {
      "defaultValue": "AAPStack-config",
      "type": "String"
    },
    "storageAccounts_AAPStackStorageName_name": {
      "defaultValue": "aapstackstorage",
      "type": "String"
    },
    "storageAccounts_AAPStackStorageNameWeb_name": {
      "defaultValue": "aapstackstorageweb",
      "type": "String"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "systemTopics_SystemTopicNameForEventGrid_name": {
      "defaultValue": "SuingSystemTopicNameforEventGrid",
      "type": "String"
    },
    "CosmosDBname": {
      "defaultValue": "aapstack-cosmos",
      "type": "String"
    }
  },
  "variables": {
    "accountName": "[toLower(parameters('CosmosDBname'))]",
    "functionAppName": "[parameters('appName')]",
    "hostingPlanName": "[parameters('appName')]",
    "applicationInsightsName": "[parameters('components_AAPStack_AI_name')]",
    "storageAccountName": "[parameters('storageAccounts_AAPStackStorageName_name')]",
    "functionWorkerRuntime": "[parameters('runtime')]",
    "insightsLocation": {
      "AzureCloud": "eastus",
      "AzureUSGovernment": "usgovvirginia"
    }
  },
  "resources": [
    {
      "type": "Microsoft.AppConfiguration/configurationStores",
      "apiVersion": "2019-11-01-preview",
      "name": "[parameters('configurationStores_AAPStackConfig_ac_name')]",
      "location": "eastus",
      "sku": {
        "name": "standard"
      },
      "properties": {
        "encryption": {}
      }
    },
    {
      "type": "Microsoft.EventGrid/systemTopics",
      "apiVersion": "2020-04-01-preview",
      "name": "[parameters('systemTopics_SystemTopicNameForEventGrid_name')]",
      "location": "eastus",
      "dependsOn": [
        "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('configurationStores_AAPStackConfig_ac_name'))]"
      ],
      "properties": {
        "source": "[resourceId('Microsoft.AppConfiguration/configurationStores', parameters('configurationStores_AAPStackConfig_ac_name'))]",
        "topicType": "Microsoft.AppConfiguration.ConfigurationStores"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccounts_AAPStackStorageName_name')]",
      "location": "eastus",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts",
      "apiVersion": "2019-12-12",
      "name": "[parameters('CosmosDBname')]",
      "location": "[parameters('location')]",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": "",
        "CosmosAccountType": "Non-Production"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "id": "[concat(parameters('CosmosDBname'), '-', parameters('location'))]",
            "failoverPriority": 0,
            "locationName": "East US"
          }
        ],
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "ipRangeFilter": "",
        "dependsOn": [],
        "capabilities": [],
        "enableFreeTier": true
      }
    },

    {
      "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
      "name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'))]",
      "apiVersion": "2016-03-31",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('accountName'))]" ],
      "properties": {
        "resource": {
          "id": "[parameters('databaseName')]"
        },
        "options": { "throughput": "[parameters('throughput')]" }
      }
    },
    {
      "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/containers",
      "name": "[concat(variables('accountName'), '/sql/', parameters('databaseName'), '/', parameters('container1Name'))]",
      "apiVersion": "2016-03-31",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('accountName'), 'sql', parameters('databaseName'))]" ],
      "properties": {
        "resource": {
          "id": "[parameters('container1Name')]",
          "partitionKey": {
            "paths": [
              "/PolicyNumber"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/MyPathToNotIndex/*"
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "apiVersion": "2019-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2018-05-01-preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('applicationInsightsName')]",
      "type": "microsoft.insights/components",
      "location": "[variables('insightsLocation')[environment().name]]",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('applicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccounts_AAPStackStorageNameWeb_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_AAPStackStorageNameWeb_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_AAPStackStorageNameWeb_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_AAPStackStorageNameWeb_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_AAPStackStorageNameWeb_name'))]"
      ],
      "sku": {
        "name": "Standard_RAGRS",
        "tier": "Standard"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('storageAccounts_AAPStackStorageNameWeb_name'), '/default/$web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_AAPStackStorageNameWeb_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_AAPStackStorageNameWeb_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    }

  ],
  "outputs": {}
}
